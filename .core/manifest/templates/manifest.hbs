/**
 * Generated by createManifest.js
 * DO NOT directly edit this file !!!!!!
 */
import op from 'object-path';

const deps = {};
const reqs = {
{{#each types}}
    '{{name}}': {
        {{#each domains}}
            '{{domain}}': {
                req: () => require('{{file}}').default,
                file: '{{file}}',
            },
        {{/each}}
    },
{{/each}}
};

const manifest = {
    get: () => {
        for (const [name, domains] of Object.entries(reqs)) {
            for (const [domain, item] of Object.entries(domains)) {
                try {
                    op.set(deps, [name, domain], item.req());
                } catch (error) {
                    const where = typeof window !== 'undefined' ? ' in browser ' : ' on server ';
                    console.error(`Error loading manifest resource "${item.file}" of type ${name} from domain ${domain}${where}`, error);
                }
            }
        }

        return deps;
    },
    contexts: {
        {{#each contexts}}
        '{{context}}': typeof window !== 'undefined' && require.context('{{modulePath}}', true, /{{filePattern}}/, '{{mode}}'),
        {{/each}}
    },
    externals: () => {
        if (typeof window !== 'undefined') {
            {{#each externals}}
            window['{{externalName}}'] = require('{{requirePath}}');
            {{/each}}
            {{#each externalAliases}}
            window['{{defaultAlias}}'] = window['{{externalName}}'];
            {{/each}}
        }
    },
    listContexts: () => {
        return {{{contextObj}}}
    },
    list: () => {
        return {{{manifest}}};
    },
}

export default manifest;
